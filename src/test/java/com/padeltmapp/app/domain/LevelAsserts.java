package com.padeltmapp.app.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class LevelAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLevelAllPropertiesEquals(Level expected, Level actual) {
        assertLevelAutoGeneratedPropertiesEquals(expected, actual);
        assertLevelAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLevelAllUpdatablePropertiesEquals(Level expected, Level actual) {
        assertLevelUpdatableFieldsEquals(expected, actual);
        assertLevelUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLevelAutoGeneratedPropertiesEquals(Level expected, Level actual) {
        assertThat(expected)
            .as("Verify Level auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLevelUpdatableFieldsEquals(Level expected, Level actual) {
        assertThat(expected)
            .as("Verify Level relevant properties")
            .satisfies(e -> assertThat(e.getLevelName()).as("check levelName").isEqualTo(actual.getLevelName()))
            .satisfies(e -> assertThat(e.getDescription()).as("check description").isEqualTo(actual.getDescription()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLevelUpdatableRelationshipsEquals(Level expected, Level actual) {
        assertThat(expected)
            .as("Verify Level relationships")
            .satisfies(e -> assertThat(e.getTournaments()).as("check tournaments").isEqualTo(actual.getTournaments()));
    }
}
