package com.padeltmapp.app.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class RegisterTeamAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRegisterTeamAllPropertiesEquals(RegisterTeam expected, RegisterTeam actual) {
        assertRegisterTeamAutoGeneratedPropertiesEquals(expected, actual);
        assertRegisterTeamAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRegisterTeamAllUpdatablePropertiesEquals(RegisterTeam expected, RegisterTeam actual) {
        assertRegisterTeamUpdatableFieldsEquals(expected, actual);
        assertRegisterTeamUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRegisterTeamAutoGeneratedPropertiesEquals(RegisterTeam expected, RegisterTeam actual) {
        assertThat(expected)
            .as("Verify RegisterTeam auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRegisterTeamUpdatableFieldsEquals(RegisterTeam expected, RegisterTeam actual) {
        assertThat(expected)
            .as("Verify RegisterTeam relevant properties")
            .satisfies(e -> assertThat(e.getRegisterDate()).as("check registerDate").isEqualTo(actual.getRegisterDate()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRegisterTeamUpdatableRelationshipsEquals(RegisterTeam expected, RegisterTeam actual) {
        assertThat(expected)
            .as("Verify RegisterTeam relationships")
            .satisfies(e -> assertThat(e.getTeam()).as("check team").isEqualTo(actual.getTeam()))
            .satisfies(e -> assertThat(e.getTournaments()).as("check tournaments").isEqualTo(actual.getTournaments()));
    }
}
